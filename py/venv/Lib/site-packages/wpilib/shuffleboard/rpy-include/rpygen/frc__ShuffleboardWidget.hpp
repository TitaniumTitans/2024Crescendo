

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>



#include <frc\shuffleboard\ShuffleboardWidget.h>


#include <frc/shuffleboard/ShuffleboardContainer.h>









#include <pybind11/stl.h>


namespace rpygen {


using namespace frc;




template <typename Derived>
struct bind_frc__ShuffleboardWidget {

    

    
  
  

    

    py::class_<typename frc::ShuffleboardWidget<Derived>, frc::ShuffleboardComponent<Derived>> cls_ShuffleboardWidget;

    

    
    

    py::module &m;
    std::string clsName;

bind_frc__ShuffleboardWidget(py::module &m, const char * clsName) :
    
    cls_ShuffleboardWidget(m, clsName),

  

  
  
    m(m),
    clsName(clsName)
{
    
  

}

void finish(const char * set_doc = NULL, const char * add_doc = NULL) {

    

  cls_ShuffleboardWidget.doc() =
    "Abstract superclass for widgets.\n"
"\n"
"This class is package-private to minimize API surface area.\n"
"\n"
"@tparam Derived the self type";

  cls_ShuffleboardWidget
  
    
  .
def
("withWidget", static_cast<Derived&(frc::ShuffleboardWidget<Derived>::*)(BuiltInWidgets)>(
        &frc::ShuffleboardWidget<Derived>::WithWidget),
      py::arg("widgetType"), release_gil(), py::return_value_policy::reference_internal, py::doc(
    "Sets the type of widget used to display the data. If not set, the default\n"
"widget type will be used.\n"
"\n"
":param widgetType: the type of the widget used to display the data\n"
"\n"
":returns: this widget object\n"
"          @see BuiltInWidgets")
  )
  
  
  
    
  .
def
("withWidget", static_cast<Derived&(frc::ShuffleboardWidget<Derived>::*)(const WidgetType&)>(
        &frc::ShuffleboardWidget<Derived>::WithWidget),
      py::arg("widgetType"), release_gil(), py::return_value_policy::reference_internal, py::doc(
    "Sets the type of widget used to display the data. If not set, the default\n"
"widget type will be used.\n"
"\n"
":param widgetType: the type of the widget used to display the data\n"
"\n"
":returns: this widget object")
  )
  
  
  
    
  .
def
("withWidget", static_cast<Derived&(frc::ShuffleboardWidget<Derived>::*)(std::string_view)>(
        &frc::ShuffleboardWidget<Derived>::WithWidget),
      py::arg("widgetType"), release_gil(), py::return_value_policy::reference_internal, py::doc(
    "Sets the type of widget used to display the data. If not set, the default\n"
"widget type will be used. This method should only be used to use a widget\n"
"that does not come built into Shuffleboard (i.e. one that comes with a\n"
"custom or third-party plugin). To use a widget that is built into\n"
"Shuffleboard, use WithWidget(WidgetType) and BuiltInWidgets.\n"
"\n"
":param widgetType: the type of the widget used to display the data\n"
"\n"
":returns: this widget object")
  )
  
  
  ;

  



    if (set_doc) {
        cls_ShuffleboardWidget.doc() = set_doc;
    }
    if (add_doc) {
        cls_ShuffleboardWidget.doc() = py::cast<std::string>(cls_ShuffleboardWidget.doc()) + add_doc;
    }

    
}

}; // struct bind_frc__ShuffleboardWidget

}; // namespace rpygen
