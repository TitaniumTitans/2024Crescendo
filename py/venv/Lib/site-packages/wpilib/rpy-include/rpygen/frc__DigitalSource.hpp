

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>



#include <frc\DigitalSource.h>










namespace rpygen {


using namespace frc;





template <typename CfgBase = EmptyTrampolineCfg>
struct PyTrampolineCfg_frc__DigitalSource :

    CfgBase

{
    using Base = frc::DigitalSource;

    
    
    using override_base_KGetPortHandleForRouting_v = frc::DigitalSource;
    
    using override_base_KGetAnalogTriggerTypeForRouting_v = frc::DigitalSource;
    
    using override_base_KIsAnalogTrigger_v = frc::DigitalSource;
    
    using override_base_KGetChannel_v = frc::DigitalSource;
    
};



template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_frc__DigitalSource : PyTrampolineBase, virtual py::trampoline_self_life_support {
    using PyTrampolineBase::PyTrampolineBase;











    
    
#ifndef RPYGEN_DISABLE_KGetPortHandleForRouting_v
    HAL_Handle GetPortHandleForRouting() const override {
    
    
    
    
        using LookupBase = typename PyTrampolineCfg::Base;
    
    
        RPYBUILD_OVERRIDE_PURE_NAME(DigitalSource, PYBIND11_TYPE(HAL_Handle), LookupBase,
            "getPortHandleForRouting", GetPortHandleForRouting, );
    
    
    
    }
#endif

    
#ifndef RPYGEN_DISABLE_KGetAnalogTriggerTypeForRouting_v
    AnalogTriggerType GetAnalogTriggerTypeForRouting() const override {
    
    
    
    
        using LookupBase = typename PyTrampolineCfg::Base;
    
    
        RPYBUILD_OVERRIDE_PURE_NAME(DigitalSource, PYBIND11_TYPE(AnalogTriggerType), LookupBase,
            "getAnalogTriggerTypeForRouting", GetAnalogTriggerTypeForRouting, );
    
    
    
    }
#endif

    
#ifndef RPYGEN_DISABLE_KIsAnalogTrigger_v
    bool IsAnalogTrigger() const override {
    
    
    
    
        using LookupBase = typename PyTrampolineCfg::Base;
    
    
        RPYBUILD_OVERRIDE_PURE_NAME(DigitalSource, PYBIND11_TYPE(bool), LookupBase,
            "isAnalogTrigger", IsAnalogTrigger, );
    
    
    
    }
#endif

    
#ifndef RPYGEN_DISABLE_KGetChannel_v
    int GetChannel() const override {
    
    
    
    
        using LookupBase = typename PyTrampolineCfg::Base;
    
    
        RPYBUILD_OVERRIDE_PURE_NAME(DigitalSource, PYBIND11_TYPE(int), LookupBase,
            "getChannel", GetChannel, );
    
    
    
    }
#endif

    

    
    

    

    
};

}; // namespace rpygen


