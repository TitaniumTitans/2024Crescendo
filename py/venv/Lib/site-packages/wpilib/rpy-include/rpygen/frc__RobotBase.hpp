

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>



#include <frc\RobotBase.h>


#include <frc/DriverStation.h>

#include <rpy/ControlWord.h>









namespace rpygen {


using namespace frc;





template <typename CfgBase = EmptyTrampolineCfg>
struct PyTrampolineCfg_frc__RobotBase :

    CfgBase

{
    using Base = frc::RobotBase;

    
    
    using override_base_StartCompetition_v = frc::RobotBase;
    
    using override_base_EndCompetition_v = frc::RobotBase;
    
};



template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_frc__RobotBase : PyTrampolineBase, virtual py::trampoline_self_life_support {
    using PyTrampolineBase::PyTrampolineBase;











    
    
#ifndef RPYGEN_DISABLE_StartCompetition_v
    void StartCompetition() override {
    
    
    
    
        using LookupBase = typename PyTrampolineCfg::Base;
    
    
        RPYBUILD_OVERRIDE_PURE_NAME(RobotBase, PYBIND11_TYPE(void), LookupBase,
            "startCompetition", StartCompetition, );
    
    
    
    }
#endif

    
#ifndef RPYGEN_DISABLE_EndCompetition_v
    void EndCompetition() override {
    
    
    
    
        using LookupBase = typename PyTrampolineCfg::Base;
    
    
        RPYBUILD_OVERRIDE_PURE_NAME(RobotBase, PYBIND11_TYPE(void), LookupBase,
            "endCompetition", EndCompetition, );
    
    
    
    }
#endif

    

    
    

    

    
};

}; // namespace rpygen


