// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controller.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_controller_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_controller_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_controller_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_controller_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_controller_2eproto;
namespace wpi {
namespace proto {
class ProtobufArmFeedforward;
struct ProtobufArmFeedforwardDefaultTypeInternal;
extern ProtobufArmFeedforwardDefaultTypeInternal _ProtobufArmFeedforward_default_instance_;
class ProtobufDifferentialDriveFeedforward;
struct ProtobufDifferentialDriveFeedforwardDefaultTypeInternal;
extern ProtobufDifferentialDriveFeedforwardDefaultTypeInternal _ProtobufDifferentialDriveFeedforward_default_instance_;
class ProtobufDifferentialDriveWheelVoltages;
struct ProtobufDifferentialDriveWheelVoltagesDefaultTypeInternal;
extern ProtobufDifferentialDriveWheelVoltagesDefaultTypeInternal _ProtobufDifferentialDriveWheelVoltages_default_instance_;
class ProtobufElevatorFeedforward;
struct ProtobufElevatorFeedforwardDefaultTypeInternal;
extern ProtobufElevatorFeedforwardDefaultTypeInternal _ProtobufElevatorFeedforward_default_instance_;
class ProtobufSimpleMotorFeedforward;
struct ProtobufSimpleMotorFeedforwardDefaultTypeInternal;
extern ProtobufSimpleMotorFeedforwardDefaultTypeInternal _ProtobufSimpleMotorFeedforward_default_instance_;
}  // namespace proto
}  // namespace wpi
PROTOBUF_NAMESPACE_OPEN
template<> ::wpi::proto::ProtobufArmFeedforward* Arena::CreateMaybeMessage<::wpi::proto::ProtobufArmFeedforward>(Arena*);
template<> ::wpi::proto::ProtobufDifferentialDriveFeedforward* Arena::CreateMaybeMessage<::wpi::proto::ProtobufDifferentialDriveFeedforward>(Arena*);
template<> ::wpi::proto::ProtobufDifferentialDriveWheelVoltages* Arena::CreateMaybeMessage<::wpi::proto::ProtobufDifferentialDriveWheelVoltages>(Arena*);
template<> ::wpi::proto::ProtobufElevatorFeedforward* Arena::CreateMaybeMessage<::wpi::proto::ProtobufElevatorFeedforward>(Arena*);
template<> ::wpi::proto::ProtobufSimpleMotorFeedforward* Arena::CreateMaybeMessage<::wpi::proto::ProtobufSimpleMotorFeedforward>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace wpi {
namespace proto {

// ===================================================================

class ProtobufArmFeedforward final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wpi.proto.ProtobufArmFeedforward) */ {
 public:
  inline ProtobufArmFeedforward() : ProtobufArmFeedforward(nullptr) {}
  ~ProtobufArmFeedforward() override;
  explicit PROTOBUF_CONSTEXPR ProtobufArmFeedforward(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtobufArmFeedforward(const ProtobufArmFeedforward& from);
  ProtobufArmFeedforward(ProtobufArmFeedforward&& from) noexcept
    : ProtobufArmFeedforward() {
    *this = ::std::move(from);
  }

  inline ProtobufArmFeedforward& operator=(const ProtobufArmFeedforward& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtobufArmFeedforward& operator=(ProtobufArmFeedforward&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtobufArmFeedforward& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtobufArmFeedforward* internal_default_instance() {
    return reinterpret_cast<const ProtobufArmFeedforward*>(
               &_ProtobufArmFeedforward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProtobufArmFeedforward& a, ProtobufArmFeedforward& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtobufArmFeedforward* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtobufArmFeedforward* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtobufArmFeedforward* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProtobufArmFeedforward>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtobufArmFeedforward& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ProtobufArmFeedforward& from) {
    ProtobufArmFeedforward::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtobufArmFeedforward* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wpi.proto.ProtobufArmFeedforward";
  }
  protected:
  explicit ProtobufArmFeedforward(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKsFieldNumber = 1,
    kKgFieldNumber = 2,
    kKvFieldNumber = 3,
    kKaFieldNumber = 4,
  };
  // double ks = 1;
  void clear_ks();
  double ks() const;
  void set_ks(double value);
  private:
  double _internal_ks() const;
  void _internal_set_ks(double value);
  public:

  // double kg = 2;
  void clear_kg();
  double kg() const;
  void set_kg(double value);
  private:
  double _internal_kg() const;
  void _internal_set_kg(double value);
  public:

  // double kv = 3;
  void clear_kv();
  double kv() const;
  void set_kv(double value);
  private:
  double _internal_kv() const;
  void _internal_set_kv(double value);
  public:

  // double ka = 4;
  void clear_ka();
  double ka() const;
  void set_ka(double value);
  private:
  double _internal_ka() const;
  void _internal_set_ka(double value);
  public:

  // @@protoc_insertion_point(class_scope:wpi.proto.ProtobufArmFeedforward)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double ks_;
    double kg_;
    double kv_;
    double ka_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};
// -------------------------------------------------------------------

class ProtobufDifferentialDriveFeedforward final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wpi.proto.ProtobufDifferentialDriveFeedforward) */ {
 public:
  inline ProtobufDifferentialDriveFeedforward() : ProtobufDifferentialDriveFeedforward(nullptr) {}
  ~ProtobufDifferentialDriveFeedforward() override;
  explicit PROTOBUF_CONSTEXPR ProtobufDifferentialDriveFeedforward(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtobufDifferentialDriveFeedforward(const ProtobufDifferentialDriveFeedforward& from);
  ProtobufDifferentialDriveFeedforward(ProtobufDifferentialDriveFeedforward&& from) noexcept
    : ProtobufDifferentialDriveFeedforward() {
    *this = ::std::move(from);
  }

  inline ProtobufDifferentialDriveFeedforward& operator=(const ProtobufDifferentialDriveFeedforward& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtobufDifferentialDriveFeedforward& operator=(ProtobufDifferentialDriveFeedforward&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtobufDifferentialDriveFeedforward& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtobufDifferentialDriveFeedforward* internal_default_instance() {
    return reinterpret_cast<const ProtobufDifferentialDriveFeedforward*>(
               &_ProtobufDifferentialDriveFeedforward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ProtobufDifferentialDriveFeedforward& a, ProtobufDifferentialDriveFeedforward& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtobufDifferentialDriveFeedforward* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtobufDifferentialDriveFeedforward* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtobufDifferentialDriveFeedforward* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProtobufDifferentialDriveFeedforward>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtobufDifferentialDriveFeedforward& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ProtobufDifferentialDriveFeedforward& from) {
    ProtobufDifferentialDriveFeedforward::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtobufDifferentialDriveFeedforward* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wpi.proto.ProtobufDifferentialDriveFeedforward";
  }
  protected:
  explicit ProtobufDifferentialDriveFeedforward(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKvLinearFieldNumber = 1,
    kKaLinearFieldNumber = 2,
    kKvAngularFieldNumber = 3,
    kKaAngularFieldNumber = 4,
  };
  // double kv_linear = 1;
  void clear_kv_linear();
  double kv_linear() const;
  void set_kv_linear(double value);
  private:
  double _internal_kv_linear() const;
  void _internal_set_kv_linear(double value);
  public:

  // double ka_linear = 2;
  void clear_ka_linear();
  double ka_linear() const;
  void set_ka_linear(double value);
  private:
  double _internal_ka_linear() const;
  void _internal_set_ka_linear(double value);
  public:

  // double kv_angular = 3;
  void clear_kv_angular();
  double kv_angular() const;
  void set_kv_angular(double value);
  private:
  double _internal_kv_angular() const;
  void _internal_set_kv_angular(double value);
  public:

  // double ka_angular = 4;
  void clear_ka_angular();
  double ka_angular() const;
  void set_ka_angular(double value);
  private:
  double _internal_ka_angular() const;
  void _internal_set_ka_angular(double value);
  public:

  // @@protoc_insertion_point(class_scope:wpi.proto.ProtobufDifferentialDriveFeedforward)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double kv_linear_;
    double ka_linear_;
    double kv_angular_;
    double ka_angular_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};
// -------------------------------------------------------------------

class ProtobufElevatorFeedforward final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wpi.proto.ProtobufElevatorFeedforward) */ {
 public:
  inline ProtobufElevatorFeedforward() : ProtobufElevatorFeedforward(nullptr) {}
  ~ProtobufElevatorFeedforward() override;
  explicit PROTOBUF_CONSTEXPR ProtobufElevatorFeedforward(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtobufElevatorFeedforward(const ProtobufElevatorFeedforward& from);
  ProtobufElevatorFeedforward(ProtobufElevatorFeedforward&& from) noexcept
    : ProtobufElevatorFeedforward() {
    *this = ::std::move(from);
  }

  inline ProtobufElevatorFeedforward& operator=(const ProtobufElevatorFeedforward& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtobufElevatorFeedforward& operator=(ProtobufElevatorFeedforward&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtobufElevatorFeedforward& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtobufElevatorFeedforward* internal_default_instance() {
    return reinterpret_cast<const ProtobufElevatorFeedforward*>(
               &_ProtobufElevatorFeedforward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ProtobufElevatorFeedforward& a, ProtobufElevatorFeedforward& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtobufElevatorFeedforward* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtobufElevatorFeedforward* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtobufElevatorFeedforward* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProtobufElevatorFeedforward>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtobufElevatorFeedforward& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ProtobufElevatorFeedforward& from) {
    ProtobufElevatorFeedforward::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtobufElevatorFeedforward* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wpi.proto.ProtobufElevatorFeedforward";
  }
  protected:
  explicit ProtobufElevatorFeedforward(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKsFieldNumber = 1,
    kKgFieldNumber = 2,
    kKvFieldNumber = 3,
    kKaFieldNumber = 4,
  };
  // double ks = 1;
  void clear_ks();
  double ks() const;
  void set_ks(double value);
  private:
  double _internal_ks() const;
  void _internal_set_ks(double value);
  public:

  // double kg = 2;
  void clear_kg();
  double kg() const;
  void set_kg(double value);
  private:
  double _internal_kg() const;
  void _internal_set_kg(double value);
  public:

  // double kv = 3;
  void clear_kv();
  double kv() const;
  void set_kv(double value);
  private:
  double _internal_kv() const;
  void _internal_set_kv(double value);
  public:

  // double ka = 4;
  void clear_ka();
  double ka() const;
  void set_ka(double value);
  private:
  double _internal_ka() const;
  void _internal_set_ka(double value);
  public:

  // @@protoc_insertion_point(class_scope:wpi.proto.ProtobufElevatorFeedforward)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double ks_;
    double kg_;
    double kv_;
    double ka_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};
// -------------------------------------------------------------------

class ProtobufSimpleMotorFeedforward final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wpi.proto.ProtobufSimpleMotorFeedforward) */ {
 public:
  inline ProtobufSimpleMotorFeedforward() : ProtobufSimpleMotorFeedforward(nullptr) {}
  ~ProtobufSimpleMotorFeedforward() override;
  explicit PROTOBUF_CONSTEXPR ProtobufSimpleMotorFeedforward(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtobufSimpleMotorFeedforward(const ProtobufSimpleMotorFeedforward& from);
  ProtobufSimpleMotorFeedforward(ProtobufSimpleMotorFeedforward&& from) noexcept
    : ProtobufSimpleMotorFeedforward() {
    *this = ::std::move(from);
  }

  inline ProtobufSimpleMotorFeedforward& operator=(const ProtobufSimpleMotorFeedforward& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtobufSimpleMotorFeedforward& operator=(ProtobufSimpleMotorFeedforward&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtobufSimpleMotorFeedforward& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtobufSimpleMotorFeedforward* internal_default_instance() {
    return reinterpret_cast<const ProtobufSimpleMotorFeedforward*>(
               &_ProtobufSimpleMotorFeedforward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ProtobufSimpleMotorFeedforward& a, ProtobufSimpleMotorFeedforward& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtobufSimpleMotorFeedforward* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtobufSimpleMotorFeedforward* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtobufSimpleMotorFeedforward* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProtobufSimpleMotorFeedforward>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtobufSimpleMotorFeedforward& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ProtobufSimpleMotorFeedforward& from) {
    ProtobufSimpleMotorFeedforward::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtobufSimpleMotorFeedforward* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wpi.proto.ProtobufSimpleMotorFeedforward";
  }
  protected:
  explicit ProtobufSimpleMotorFeedforward(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKsFieldNumber = 1,
    kKvFieldNumber = 2,
    kKaFieldNumber = 3,
  };
  // double ks = 1;
  void clear_ks();
  double ks() const;
  void set_ks(double value);
  private:
  double _internal_ks() const;
  void _internal_set_ks(double value);
  public:

  // double kv = 2;
  void clear_kv();
  double kv() const;
  void set_kv(double value);
  private:
  double _internal_kv() const;
  void _internal_set_kv(double value);
  public:

  // double ka = 3;
  void clear_ka();
  double ka() const;
  void set_ka(double value);
  private:
  double _internal_ka() const;
  void _internal_set_ka(double value);
  public:

  // @@protoc_insertion_point(class_scope:wpi.proto.ProtobufSimpleMotorFeedforward)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double ks_;
    double kv_;
    double ka_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};
// -------------------------------------------------------------------

class ProtobufDifferentialDriveWheelVoltages final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wpi.proto.ProtobufDifferentialDriveWheelVoltages) */ {
 public:
  inline ProtobufDifferentialDriveWheelVoltages() : ProtobufDifferentialDriveWheelVoltages(nullptr) {}
  ~ProtobufDifferentialDriveWheelVoltages() override;
  explicit PROTOBUF_CONSTEXPR ProtobufDifferentialDriveWheelVoltages(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtobufDifferentialDriveWheelVoltages(const ProtobufDifferentialDriveWheelVoltages& from);
  ProtobufDifferentialDriveWheelVoltages(ProtobufDifferentialDriveWheelVoltages&& from) noexcept
    : ProtobufDifferentialDriveWheelVoltages() {
    *this = ::std::move(from);
  }

  inline ProtobufDifferentialDriveWheelVoltages& operator=(const ProtobufDifferentialDriveWheelVoltages& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtobufDifferentialDriveWheelVoltages& operator=(ProtobufDifferentialDriveWheelVoltages&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtobufDifferentialDriveWheelVoltages& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtobufDifferentialDriveWheelVoltages* internal_default_instance() {
    return reinterpret_cast<const ProtobufDifferentialDriveWheelVoltages*>(
               &_ProtobufDifferentialDriveWheelVoltages_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ProtobufDifferentialDriveWheelVoltages& a, ProtobufDifferentialDriveWheelVoltages& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtobufDifferentialDriveWheelVoltages* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtobufDifferentialDriveWheelVoltages* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtobufDifferentialDriveWheelVoltages* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProtobufDifferentialDriveWheelVoltages>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtobufDifferentialDriveWheelVoltages& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ProtobufDifferentialDriveWheelVoltages& from) {
    ProtobufDifferentialDriveWheelVoltages::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtobufDifferentialDriveWheelVoltages* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wpi.proto.ProtobufDifferentialDriveWheelVoltages";
  }
  protected:
  explicit ProtobufDifferentialDriveWheelVoltages(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLeftFieldNumber = 1,
    kRightFieldNumber = 2,
  };
  // double left = 1;
  void clear_left();
  double left() const;
  void set_left(double value);
  private:
  double _internal_left() const;
  void _internal_set_left(double value);
  public:

  // double right = 2;
  void clear_right();
  double right() const;
  void set_right(double value);
  private:
  double _internal_right() const;
  void _internal_set_right(double value);
  public:

  // @@protoc_insertion_point(class_scope:wpi.proto.ProtobufDifferentialDriveWheelVoltages)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double left_;
    double right_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_controller_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtobufArmFeedforward

// double ks = 1;
inline void ProtobufArmFeedforward::clear_ks() {
  _impl_.ks_ = 0;
}
inline double ProtobufArmFeedforward::_internal_ks() const {
  return _impl_.ks_;
}
inline double ProtobufArmFeedforward::ks() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufArmFeedforward.ks)
  return _internal_ks();
}
inline void ProtobufArmFeedforward::_internal_set_ks(double value) {
  
  _impl_.ks_ = value;
}
inline void ProtobufArmFeedforward::set_ks(double value) {
  _internal_set_ks(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufArmFeedforward.ks)
}

// double kg = 2;
inline void ProtobufArmFeedforward::clear_kg() {
  _impl_.kg_ = 0;
}
inline double ProtobufArmFeedforward::_internal_kg() const {
  return _impl_.kg_;
}
inline double ProtobufArmFeedforward::kg() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufArmFeedforward.kg)
  return _internal_kg();
}
inline void ProtobufArmFeedforward::_internal_set_kg(double value) {
  
  _impl_.kg_ = value;
}
inline void ProtobufArmFeedforward::set_kg(double value) {
  _internal_set_kg(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufArmFeedforward.kg)
}

// double kv = 3;
inline void ProtobufArmFeedforward::clear_kv() {
  _impl_.kv_ = 0;
}
inline double ProtobufArmFeedforward::_internal_kv() const {
  return _impl_.kv_;
}
inline double ProtobufArmFeedforward::kv() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufArmFeedforward.kv)
  return _internal_kv();
}
inline void ProtobufArmFeedforward::_internal_set_kv(double value) {
  
  _impl_.kv_ = value;
}
inline void ProtobufArmFeedforward::set_kv(double value) {
  _internal_set_kv(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufArmFeedforward.kv)
}

// double ka = 4;
inline void ProtobufArmFeedforward::clear_ka() {
  _impl_.ka_ = 0;
}
inline double ProtobufArmFeedforward::_internal_ka() const {
  return _impl_.ka_;
}
inline double ProtobufArmFeedforward::ka() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufArmFeedforward.ka)
  return _internal_ka();
}
inline void ProtobufArmFeedforward::_internal_set_ka(double value) {
  
  _impl_.ka_ = value;
}
inline void ProtobufArmFeedforward::set_ka(double value) {
  _internal_set_ka(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufArmFeedforward.ka)
}

// -------------------------------------------------------------------

// ProtobufDifferentialDriveFeedforward

// double kv_linear = 1;
inline void ProtobufDifferentialDriveFeedforward::clear_kv_linear() {
  _impl_.kv_linear_ = 0;
}
inline double ProtobufDifferentialDriveFeedforward::_internal_kv_linear() const {
  return _impl_.kv_linear_;
}
inline double ProtobufDifferentialDriveFeedforward::kv_linear() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufDifferentialDriveFeedforward.kv_linear)
  return _internal_kv_linear();
}
inline void ProtobufDifferentialDriveFeedforward::_internal_set_kv_linear(double value) {
  
  _impl_.kv_linear_ = value;
}
inline void ProtobufDifferentialDriveFeedforward::set_kv_linear(double value) {
  _internal_set_kv_linear(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufDifferentialDriveFeedforward.kv_linear)
}

// double ka_linear = 2;
inline void ProtobufDifferentialDriveFeedforward::clear_ka_linear() {
  _impl_.ka_linear_ = 0;
}
inline double ProtobufDifferentialDriveFeedforward::_internal_ka_linear() const {
  return _impl_.ka_linear_;
}
inline double ProtobufDifferentialDriveFeedforward::ka_linear() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufDifferentialDriveFeedforward.ka_linear)
  return _internal_ka_linear();
}
inline void ProtobufDifferentialDriveFeedforward::_internal_set_ka_linear(double value) {
  
  _impl_.ka_linear_ = value;
}
inline void ProtobufDifferentialDriveFeedforward::set_ka_linear(double value) {
  _internal_set_ka_linear(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufDifferentialDriveFeedforward.ka_linear)
}

// double kv_angular = 3;
inline void ProtobufDifferentialDriveFeedforward::clear_kv_angular() {
  _impl_.kv_angular_ = 0;
}
inline double ProtobufDifferentialDriveFeedforward::_internal_kv_angular() const {
  return _impl_.kv_angular_;
}
inline double ProtobufDifferentialDriveFeedforward::kv_angular() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufDifferentialDriveFeedforward.kv_angular)
  return _internal_kv_angular();
}
inline void ProtobufDifferentialDriveFeedforward::_internal_set_kv_angular(double value) {
  
  _impl_.kv_angular_ = value;
}
inline void ProtobufDifferentialDriveFeedforward::set_kv_angular(double value) {
  _internal_set_kv_angular(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufDifferentialDriveFeedforward.kv_angular)
}

// double ka_angular = 4;
inline void ProtobufDifferentialDriveFeedforward::clear_ka_angular() {
  _impl_.ka_angular_ = 0;
}
inline double ProtobufDifferentialDriveFeedforward::_internal_ka_angular() const {
  return _impl_.ka_angular_;
}
inline double ProtobufDifferentialDriveFeedforward::ka_angular() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufDifferentialDriveFeedforward.ka_angular)
  return _internal_ka_angular();
}
inline void ProtobufDifferentialDriveFeedforward::_internal_set_ka_angular(double value) {
  
  _impl_.ka_angular_ = value;
}
inline void ProtobufDifferentialDriveFeedforward::set_ka_angular(double value) {
  _internal_set_ka_angular(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufDifferentialDriveFeedforward.ka_angular)
}

// -------------------------------------------------------------------

// ProtobufElevatorFeedforward

// double ks = 1;
inline void ProtobufElevatorFeedforward::clear_ks() {
  _impl_.ks_ = 0;
}
inline double ProtobufElevatorFeedforward::_internal_ks() const {
  return _impl_.ks_;
}
inline double ProtobufElevatorFeedforward::ks() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufElevatorFeedforward.ks)
  return _internal_ks();
}
inline void ProtobufElevatorFeedforward::_internal_set_ks(double value) {
  
  _impl_.ks_ = value;
}
inline void ProtobufElevatorFeedforward::set_ks(double value) {
  _internal_set_ks(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufElevatorFeedforward.ks)
}

// double kg = 2;
inline void ProtobufElevatorFeedforward::clear_kg() {
  _impl_.kg_ = 0;
}
inline double ProtobufElevatorFeedforward::_internal_kg() const {
  return _impl_.kg_;
}
inline double ProtobufElevatorFeedforward::kg() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufElevatorFeedforward.kg)
  return _internal_kg();
}
inline void ProtobufElevatorFeedforward::_internal_set_kg(double value) {
  
  _impl_.kg_ = value;
}
inline void ProtobufElevatorFeedforward::set_kg(double value) {
  _internal_set_kg(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufElevatorFeedforward.kg)
}

// double kv = 3;
inline void ProtobufElevatorFeedforward::clear_kv() {
  _impl_.kv_ = 0;
}
inline double ProtobufElevatorFeedforward::_internal_kv() const {
  return _impl_.kv_;
}
inline double ProtobufElevatorFeedforward::kv() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufElevatorFeedforward.kv)
  return _internal_kv();
}
inline void ProtobufElevatorFeedforward::_internal_set_kv(double value) {
  
  _impl_.kv_ = value;
}
inline void ProtobufElevatorFeedforward::set_kv(double value) {
  _internal_set_kv(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufElevatorFeedforward.kv)
}

// double ka = 4;
inline void ProtobufElevatorFeedforward::clear_ka() {
  _impl_.ka_ = 0;
}
inline double ProtobufElevatorFeedforward::_internal_ka() const {
  return _impl_.ka_;
}
inline double ProtobufElevatorFeedforward::ka() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufElevatorFeedforward.ka)
  return _internal_ka();
}
inline void ProtobufElevatorFeedforward::_internal_set_ka(double value) {
  
  _impl_.ka_ = value;
}
inline void ProtobufElevatorFeedforward::set_ka(double value) {
  _internal_set_ka(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufElevatorFeedforward.ka)
}

// -------------------------------------------------------------------

// ProtobufSimpleMotorFeedforward

// double ks = 1;
inline void ProtobufSimpleMotorFeedforward::clear_ks() {
  _impl_.ks_ = 0;
}
inline double ProtobufSimpleMotorFeedforward::_internal_ks() const {
  return _impl_.ks_;
}
inline double ProtobufSimpleMotorFeedforward::ks() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufSimpleMotorFeedforward.ks)
  return _internal_ks();
}
inline void ProtobufSimpleMotorFeedforward::_internal_set_ks(double value) {
  
  _impl_.ks_ = value;
}
inline void ProtobufSimpleMotorFeedforward::set_ks(double value) {
  _internal_set_ks(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufSimpleMotorFeedforward.ks)
}

// double kv = 2;
inline void ProtobufSimpleMotorFeedforward::clear_kv() {
  _impl_.kv_ = 0;
}
inline double ProtobufSimpleMotorFeedforward::_internal_kv() const {
  return _impl_.kv_;
}
inline double ProtobufSimpleMotorFeedforward::kv() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufSimpleMotorFeedforward.kv)
  return _internal_kv();
}
inline void ProtobufSimpleMotorFeedforward::_internal_set_kv(double value) {
  
  _impl_.kv_ = value;
}
inline void ProtobufSimpleMotorFeedforward::set_kv(double value) {
  _internal_set_kv(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufSimpleMotorFeedforward.kv)
}

// double ka = 3;
inline void ProtobufSimpleMotorFeedforward::clear_ka() {
  _impl_.ka_ = 0;
}
inline double ProtobufSimpleMotorFeedforward::_internal_ka() const {
  return _impl_.ka_;
}
inline double ProtobufSimpleMotorFeedforward::ka() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufSimpleMotorFeedforward.ka)
  return _internal_ka();
}
inline void ProtobufSimpleMotorFeedforward::_internal_set_ka(double value) {
  
  _impl_.ka_ = value;
}
inline void ProtobufSimpleMotorFeedforward::set_ka(double value) {
  _internal_set_ka(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufSimpleMotorFeedforward.ka)
}

// -------------------------------------------------------------------

// ProtobufDifferentialDriveWheelVoltages

// double left = 1;
inline void ProtobufDifferentialDriveWheelVoltages::clear_left() {
  _impl_.left_ = 0;
}
inline double ProtobufDifferentialDriveWheelVoltages::_internal_left() const {
  return _impl_.left_;
}
inline double ProtobufDifferentialDriveWheelVoltages::left() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufDifferentialDriveWheelVoltages.left)
  return _internal_left();
}
inline void ProtobufDifferentialDriveWheelVoltages::_internal_set_left(double value) {
  
  _impl_.left_ = value;
}
inline void ProtobufDifferentialDriveWheelVoltages::set_left(double value) {
  _internal_set_left(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufDifferentialDriveWheelVoltages.left)
}

// double right = 2;
inline void ProtobufDifferentialDriveWheelVoltages::clear_right() {
  _impl_.right_ = 0;
}
inline double ProtobufDifferentialDriveWheelVoltages::_internal_right() const {
  return _impl_.right_;
}
inline double ProtobufDifferentialDriveWheelVoltages::right() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufDifferentialDriveWheelVoltages.right)
  return _internal_right();
}
inline void ProtobufDifferentialDriveWheelVoltages::_internal_set_right(double value) {
  
  _impl_.right_ = value;
}
inline void ProtobufDifferentialDriveWheelVoltages::set_right(double value) {
  _internal_set_right(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufDifferentialDriveWheelVoltages.right)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace wpi

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_controller_2eproto
