// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wpimath.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_wpimath_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_wpimath_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_wpimath_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_wpimath_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_wpimath_2eproto;
namespace wpi {
namespace proto {
class ProtobufMatrix;
struct ProtobufMatrixDefaultTypeInternal;
extern ProtobufMatrixDefaultTypeInternal _ProtobufMatrix_default_instance_;
class ProtobufVector;
struct ProtobufVectorDefaultTypeInternal;
extern ProtobufVectorDefaultTypeInternal _ProtobufVector_default_instance_;
}  // namespace proto
}  // namespace wpi
PROTOBUF_NAMESPACE_OPEN
template<> ::wpi::proto::ProtobufMatrix* Arena::CreateMaybeMessage<::wpi::proto::ProtobufMatrix>(Arena*);
template<> ::wpi::proto::ProtobufVector* Arena::CreateMaybeMessage<::wpi::proto::ProtobufVector>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace wpi {
namespace proto {

// ===================================================================

class ProtobufMatrix final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wpi.proto.ProtobufMatrix) */ {
 public:
  inline ProtobufMatrix() : ProtobufMatrix(nullptr) {}
  ~ProtobufMatrix() override;
  explicit PROTOBUF_CONSTEXPR ProtobufMatrix(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtobufMatrix(const ProtobufMatrix& from);
  ProtobufMatrix(ProtobufMatrix&& from) noexcept
    : ProtobufMatrix() {
    *this = ::std::move(from);
  }

  inline ProtobufMatrix& operator=(const ProtobufMatrix& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtobufMatrix& operator=(ProtobufMatrix&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtobufMatrix& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtobufMatrix* internal_default_instance() {
    return reinterpret_cast<const ProtobufMatrix*>(
               &_ProtobufMatrix_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProtobufMatrix& a, ProtobufMatrix& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtobufMatrix* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtobufMatrix* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtobufMatrix* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProtobufMatrix>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtobufMatrix& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ProtobufMatrix& from) {
    ProtobufMatrix::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtobufMatrix* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wpi.proto.ProtobufMatrix";
  }
  protected:
  explicit ProtobufMatrix(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3,
    kNumRowsFieldNumber = 1,
    kNumColsFieldNumber = 2,
  };
  // repeated double data = 3;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  private:
  double _internal_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_data() const;
  void _internal_add_data(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_data();
  public:
  double data(int index) const;
  void set_data(int index, double value);
  void add_data(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_data();

  // uint32 num_rows = 1;
  void clear_num_rows();
  uint32_t num_rows() const;
  void set_num_rows(uint32_t value);
  private:
  uint32_t _internal_num_rows() const;
  void _internal_set_num_rows(uint32_t value);
  public:

  // uint32 num_cols = 2;
  void clear_num_cols();
  uint32_t num_cols() const;
  void set_num_cols(uint32_t value);
  private:
  uint32_t _internal_num_cols() const;
  void _internal_set_num_cols(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:wpi.proto.ProtobufMatrix)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > data_;
    uint32_t num_rows_;
    uint32_t num_cols_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wpimath_2eproto;
};
// -------------------------------------------------------------------

class ProtobufVector final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wpi.proto.ProtobufVector) */ {
 public:
  inline ProtobufVector() : ProtobufVector(nullptr) {}
  ~ProtobufVector() override;
  explicit PROTOBUF_CONSTEXPR ProtobufVector(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtobufVector(const ProtobufVector& from);
  ProtobufVector(ProtobufVector&& from) noexcept
    : ProtobufVector() {
    *this = ::std::move(from);
  }

  inline ProtobufVector& operator=(const ProtobufVector& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtobufVector& operator=(ProtobufVector&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtobufVector& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtobufVector* internal_default_instance() {
    return reinterpret_cast<const ProtobufVector*>(
               &_ProtobufVector_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ProtobufVector& a, ProtobufVector& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtobufVector* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtobufVector* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtobufVector* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProtobufVector>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtobufVector& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ProtobufVector& from) {
    ProtobufVector::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtobufVector* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wpi.proto.ProtobufVector";
  }
  protected:
  explicit ProtobufVector(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRowsFieldNumber = 1,
  };
  // repeated double rows = 1;
  int rows_size() const;
  private:
  int _internal_rows_size() const;
  public:
  void clear_rows();
  private:
  double _internal_rows(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_rows() const;
  void _internal_add_rows(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_rows();
  public:
  double rows(int index) const;
  void set_rows(int index, double value);
  void add_rows(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      rows() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_rows();

  // @@protoc_insertion_point(class_scope:wpi.proto.ProtobufVector)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > rows_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_wpimath_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtobufMatrix

// uint32 num_rows = 1;
inline void ProtobufMatrix::clear_num_rows() {
  _impl_.num_rows_ = 0u;
}
inline uint32_t ProtobufMatrix::_internal_num_rows() const {
  return _impl_.num_rows_;
}
inline uint32_t ProtobufMatrix::num_rows() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufMatrix.num_rows)
  return _internal_num_rows();
}
inline void ProtobufMatrix::_internal_set_num_rows(uint32_t value) {
  
  _impl_.num_rows_ = value;
}
inline void ProtobufMatrix::set_num_rows(uint32_t value) {
  _internal_set_num_rows(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufMatrix.num_rows)
}

// uint32 num_cols = 2;
inline void ProtobufMatrix::clear_num_cols() {
  _impl_.num_cols_ = 0u;
}
inline uint32_t ProtobufMatrix::_internal_num_cols() const {
  return _impl_.num_cols_;
}
inline uint32_t ProtobufMatrix::num_cols() const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufMatrix.num_cols)
  return _internal_num_cols();
}
inline void ProtobufMatrix::_internal_set_num_cols(uint32_t value) {
  
  _impl_.num_cols_ = value;
}
inline void ProtobufMatrix::set_num_cols(uint32_t value) {
  _internal_set_num_cols(value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufMatrix.num_cols)
}

// repeated double data = 3;
inline int ProtobufMatrix::_internal_data_size() const {
  return _impl_.data_.size();
}
inline int ProtobufMatrix::data_size() const {
  return _internal_data_size();
}
inline void ProtobufMatrix::clear_data() {
  _impl_.data_.Clear();
}
inline double ProtobufMatrix::_internal_data(int index) const {
  return _impl_.data_.Get(index);
}
inline double ProtobufMatrix::data(int index) const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufMatrix.data)
  return _internal_data(index);
}
inline void ProtobufMatrix::set_data(int index, double value) {
  _impl_.data_.Set(index, value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufMatrix.data)
}
inline void ProtobufMatrix::_internal_add_data(double value) {
  _impl_.data_.Add(value);
}
inline void ProtobufMatrix::add_data(double value) {
  _internal_add_data(value);
  // @@protoc_insertion_point(field_add:wpi.proto.ProtobufMatrix.data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ProtobufMatrix::_internal_data() const {
  return _impl_.data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ProtobufMatrix::data() const {
  // @@protoc_insertion_point(field_list:wpi.proto.ProtobufMatrix.data)
  return _internal_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ProtobufMatrix::_internal_mutable_data() {
  return &_impl_.data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ProtobufMatrix::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:wpi.proto.ProtobufMatrix.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// ProtobufVector

// repeated double rows = 1;
inline int ProtobufVector::_internal_rows_size() const {
  return _impl_.rows_.size();
}
inline int ProtobufVector::rows_size() const {
  return _internal_rows_size();
}
inline void ProtobufVector::clear_rows() {
  _impl_.rows_.Clear();
}
inline double ProtobufVector::_internal_rows(int index) const {
  return _impl_.rows_.Get(index);
}
inline double ProtobufVector::rows(int index) const {
  // @@protoc_insertion_point(field_get:wpi.proto.ProtobufVector.rows)
  return _internal_rows(index);
}
inline void ProtobufVector::set_rows(int index, double value) {
  _impl_.rows_.Set(index, value);
  // @@protoc_insertion_point(field_set:wpi.proto.ProtobufVector.rows)
}
inline void ProtobufVector::_internal_add_rows(double value) {
  _impl_.rows_.Add(value);
}
inline void ProtobufVector::add_rows(double value) {
  _internal_add_rows(value);
  // @@protoc_insertion_point(field_add:wpi.proto.ProtobufVector.rows)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ProtobufVector::_internal_rows() const {
  return _impl_.rows_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ProtobufVector::rows() const {
  // @@protoc_insertion_point(field_list:wpi.proto.ProtobufVector.rows)
  return _internal_rows();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ProtobufVector::_internal_mutable_rows() {
  return &_impl_.rows_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ProtobufVector::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:wpi.proto.ProtobufVector.rows)
  return _internal_mutable_rows();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace wpi

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_wpimath_2eproto
