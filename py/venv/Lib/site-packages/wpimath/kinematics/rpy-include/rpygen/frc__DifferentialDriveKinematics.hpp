

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>



#include <frc\kinematics\DifferentialDriveKinematics.h>


#include <wpystruct.h>









#include <rpygen/frc__Kinematics.hpp>



namespace rpygen {


using namespace frc;





template <typename CfgBase = EmptyTrampolineCfg>
struct PyTrampolineCfg_frc__DifferentialDriveKinematics :


    PyTrampolineCfg_frc__Kinematics<DifferentialDriveWheelSpeeds, DifferentialDriveWheelPositions, 

CfgBase
>

{
    using Base = frc::DifferentialDriveKinematics;

    
    
    using override_base_KToChassisSpeeds_KRTDifferentialDriveWheelSpeeds = frc::DifferentialDriveKinematics;
    
    using override_base_KToWheelSpeeds_KRTChassisSpeeds = frc::DifferentialDriveKinematics;
    
    using override_base_KToTwist2d_KRTDifferentialDriveWheelPositions_KRTDifferentialDriveWheelPositions = frc::DifferentialDriveKinematics;
    
};




template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_frc__DifferentialDriveKinematics =

    PyTrampoline_frc__Kinematics<

        PyTrampolineBase

        , DifferentialDriveWheelSpeeds, DifferentialDriveWheelPositions
        , PyTrampolineCfg
    >

;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_frc__DifferentialDriveKinematics : PyTrampolineBase_frc__DifferentialDriveKinematics<PyTrampolineBase, PyTrampolineCfg> {
    using PyTrampolineBase_frc__DifferentialDriveKinematics<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_frc__DifferentialDriveKinematics;











    
    
#ifndef RPYGEN_DISABLE_KToChassisSpeeds_KRTDifferentialDriveWheelSpeeds
    ChassisSpeeds ToChassisSpeeds(const DifferentialDriveWheelSpeeds& wheelSpeeds) const override {
    
    
    
    
        using LookupBase = typename PyTrampolineCfg::Base;
    
    
        using CxxCallBase = typename PyTrampolineCfg::override_base_KToChassisSpeeds_KRTDifferentialDriveWheelSpeeds;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(ChassisSpeeds), LookupBase,
            "toChassisSpeeds", wheelSpeeds);
        return CxxCallBase::ToChassisSpeeds(std::forward<decltype(wheelSpeeds)>(wheelSpeeds));
    
    
    
    }
#endif

    
#ifndef RPYGEN_DISABLE_KToWheelSpeeds_KRTChassisSpeeds
    DifferentialDriveWheelSpeeds ToWheelSpeeds(const ChassisSpeeds& chassisSpeeds) const override {
    
    
    
    
        using LookupBase = typename PyTrampolineCfg::Base;
    
    
        using CxxCallBase = typename PyTrampolineCfg::override_base_KToWheelSpeeds_KRTChassisSpeeds;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(DifferentialDriveWheelSpeeds), LookupBase,
            "toWheelSpeeds", chassisSpeeds);
        return CxxCallBase::ToWheelSpeeds(std::forward<decltype(chassisSpeeds)>(chassisSpeeds));
    
    
    
    }
#endif

    
#ifndef RPYGEN_DISABLE_KToTwist2d_KRTDifferentialDriveWheelPositions_KRTDifferentialDriveWheelPositions
    Twist2d ToTwist2d(const DifferentialDriveWheelPositions& start, const DifferentialDriveWheelPositions& end) const override {
    
    
    
    
        using LookupBase = typename PyTrampolineCfg::Base;
    
    
        using CxxCallBase = typename PyTrampolineCfg::override_base_KToTwist2d_KRTDifferentialDriveWheelPositions_KRTDifferentialDriveWheelPositions;
        PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(Twist2d), LookupBase,
            "toTwist2d", start, end);
        return CxxCallBase::ToTwist2d(std::forward<decltype(start)>(start), std::forward<decltype(end)>(end));
    
    
    
    }
#endif

    

    
    

    

    
};

}; // namespace rpygen


